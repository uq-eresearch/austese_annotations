/*
** Annotator 1.2.6-dev-46ddf84
** https://github.com/okfn/annotator/
**
** Copyright 2012 Aron Carroll, Rufus Pollock, and Nick Stenning.
** Dual licensed under the MIT and GPLv3 licenses.
** https://github.com/okfn/annotator/blob/master/LICENSE
**
** Built at: 2013-03-11 05:04:07Z
*/((function(){var a,b=function(a,b){return function(){return a.apply(b,arguments)}},c=Object.prototype.hasOwnProperty,d=function(a,b){function e(){this.constructor=a}for(var d in b)c.call(b,d)&&(a[d]=b[d]);return e.prototype=b.prototype,a.prototype=new e,a.__super__=b.prototype,a},e=Array.prototype.indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1};Annotator.Plugin.Store=function(c){function f(a,c){this._onError=b(this._onError,this),this._onLoadAnnotationsFromSearch=b(this._onLoadAnnotationsFromSearch,this),this._onLoadAnnotations=b(this._onLoadAnnotations,this),this._getAnnotations=b(this._getAnnotations,this),f.__super__.constructor.apply(this,arguments),this.annotations=[]}return d(f,c),f.prototype.events={annotationCreated:"annotationCreated",annotationDeleted:"annotationDeleted",annotationUpdated:"annotationUpdated"},f.prototype.options={annotationData:{},emulateHTTP:!1,loadFromSearch:!1,prefix:"/store",urls:{create:"/annotations",read:"/annotations/:id",update:"/annotations/:id",destroy:"/annotations/:id",search:"/search"}},f.prototype.pluginInit=function(){if(!Annotator.supported())return;return this.annotator.plugins.Auth?this.annotator.plugins.Auth.withToken(this._getAnnotations):this._getAnnotations()},f.prototype._getAnnotations=function(){return this.options.loadFromSearch?this.loadAnnotationsFromSearch(this.options.loadFromSearch):this.loadAnnotations()},f.prototype.annotationCreated=function(a){var b=this;return e.call(this.annotations,a)<0?(this.registerAnnotation(a),this._apiRequest("create",a,function(c){return c.id==null&&console.warn(Annotator._t("Warning: No ID returned from server for annotation "),a),b.updateAnnotation(a,c)})):this.updateAnnotation(a,{})},f.prototype.annotationUpdated=function(a){var b=this;if(e.call(this.annotations,a)>=0)return this._apiRequest("update",a,function(c){return b.updateAnnotation(a,c)})},f.prototype.annotationDeleted=function(a){var b=this;if(e.call(this.annotations,a)>=0)return this._apiRequest("destroy",a,function(){return b.unregisterAnnotation(a)})},f.prototype.registerAnnotation=function(a){return this.annotations.push(a)},f.prototype.unregisterAnnotation=function(a){return this.annotations.splice(this.annotations.indexOf(a),1)},f.prototype.updateAnnotation=function(b,c){return e.call(this.annotations,b)<0?console.error(Annotator._t("Trying to update unregistered annotation!")):a.extend(b,c),a(b.highlights).data("annotation",b)},f.prototype.loadAnnotations=function(){return this._apiRequest("read",null,this._onLoadAnnotations)},f.prototype._onLoadAnnotations=function(a){return a==null&&(a=[]),this.annotations=a,this.annotator.loadAnnotations(a.slice())},f.prototype.loadAnnotationsFromSearch=function(a){return this._apiRequest("search",a,this._onLoadAnnotationsFromSearch)},f.prototype._onLoadAnnotationsFromSearch=function(a){return a==null&&(a={}),this._onLoadAnnotations(a.rows||[])},f.prototype.dumpAnnotations=function(){var a,b,c,d,e;d=this.annotations,e=[];for(b=0,c=d.length;b<c;b++)a=d[b],e.push(JSON.parse(this._dataFor(a)));return e},f.prototype._apiRequest=function(b,c,d){var e,f,g,h;return e=c&&c.id,h=this._urlFor(b,e),f=this._apiRequestOptions(b,c,d),g=a.ajax(h,f),g._id=e,g._action=b,g},f.prototype._apiRequestOptions=function(b,c,d){var e,f,g;return f=this._methodFor(b),g={type:f,headers:this.element.data("annotator:headers"),dataType:"json",success:d||function(){},error:this._onError},this.options.emulateHTTP&&(f==="PUT"||f==="DELETE")&&(g.headers=a.extend(g.headers,{"X-HTTP-Method-Override":f}),g.type="POST"),b==="search"?(g=a.extend(g,{data:c}),g):(e=c&&this._dataFor(c),this.options.emulateJSON?(g.data={json:e},this.options.emulateHTTP&&(g.data._method=f),g):(g=a.extend(g,{data:e,contentType:"application/json; charset=utf-8"}),g))},f.prototype._urlFor=function(a,b){var c,d;return c=b!=null?"/"+b:"",d=this.options.prefix!=null?this.options.prefix:"",d+=this.options.urls[a],d=d.replace(/\/:id/,c),d},f.prototype._methodFor=function(a){var b;return b={create:"POST",read:"GET",update:"PUT",destroy:"DELETE",search:"GET"},b[a]},f.prototype._dataFor=function(b){var c,d,e,f;return d=b.highlights,f=b.marker,delete b.marker,b.selection&&(b.selection.image_src=b.selection.image.src,e=b.selection.image,delete b.selection.image),delete b.highlights,a.extend(b,this.options.annotationData),c=JSON.stringify(b),d&&(b.highlights=d),f&&(b.marker=f),b.selection.image=e,delete b.selection.image_src,c},f.prototype._onError=function(a){var b,c;b=a._action,c=Annotator._t("Sorry we could not ")+b+Annotator._t(" this annotation"),a._action==="search"?c=Annotator._t("Sorry we could not search the store for annotations"):a._action==="read"&&!a._id&&(c=Annotator._t("Sorry we could not ")+b+Annotator._t(" the annotations from the store"));switch(a.status){case 401:c=Annotator._t("Sorry you are not allowed to ")+b+Annotator._t(" this annotation");break;case 404:c=Annotator._t("Sorry we could not connect to the annotations store");break;case 500:c=Annotator._t("Sorry something went wrong with the annotation store")}return Annotator.showNotification(c,Annotator.Notification.ERROR),console.error(Annotator._t("API request failed:")+(" '"+a.status+"'"))},f}(Annotator.Plugin),a=Annotator.$})).call(this);